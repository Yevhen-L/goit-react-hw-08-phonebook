{"version":3,"file":"static/js/875.7a12d690.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","hooks/filterHook.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Boxes\":\"ContactForm_Boxes__u2L-x\"};","import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Typography } from '@mui/material';\nimport style from './ContactForm.module.css';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'Redux/contactsSlice';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const onAddContact = contact => {\n    if (contacts && contacts.some(item => item.name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    addContact(contact);\n  };\n\n  const onChangeInput = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (name && number) {\n      onAddContact({\n        name,\n        number,\n      });\n    } else {\n      alert('The number field and name are empty, fill them in!');\n    }\n\n    reset(event);\n  };\n\n  const reset = event => {\n    setName('');\n    setNumber('');\n    event.currentTarget.reset();\n  };\n\n  return (\n    <Box className={style.Boxes} textAlign=\"center\">\n      <Typography\n        style={{\n          fontSize: '40px',\n          fontWeight: 'bold',\n          lineHeight: '2.8',\n          marginBottom: '20px',\n        }}\n        variant=\"h3\"\n      >\n        Phonebook\n      </Typography>\n      <Box\n        component=\"form\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        sx={{\n          '& > :not(style)': { m: 1 },\n        }}\n        autoComplete=\"off\"\n        onSubmit={onSubmitForm}\n      >\n        <TextField\n          sx={{ width: '50ch' }}\n          type=\"text\"\n          name=\"name\"\n          onChange={onChangeInput}\n          id=\"filled-basic\"\n          label=\"Name\"\n          variant=\"filled\"\n          required\n        />\n        <TextField\n          sx={{ width: '50ch' }}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id=\"filled-basic\"\n          label=\"Number\"\n          variant=\"filled\"\n          onChange={onChangeInput}\n          required\n        />\n        <Button disabled={!name || !number} type=\"submit\">\n          Add Contact\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { ListItemText, ListItem } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useDeleteContactMutation } from 'Redux/contactsSlice';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <ListItem>\n      <ListItemText primary={`${name}: ${number}`} />\n      <IconButton\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n        edge=\"end\"\n        aria-label=\"delete\"\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterAction, onFilterChange } from '../Redux/filterSlice';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(onFilterChange);\n  const onChangeFilter = event => dispatch(filterAction.changeFilter(event));\n\n  return { filter, changeFilter: onChangeFilter };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Boxes\":\"ContactList_Boxes__a1b5J\"};","import { Box, TextField, Typography } from '@mui/material';\nimport { useFilter } from '../../hooks/filterHook';\n\nexport const Filter = () => {\n  const { filter, changeFilter } = useFilter();\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      sx={{\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <Typography\n        style={{\n          fontSize: '35px',\n          fontWeight: 'bold',\n          lineHeight: '2.8',\n          marginBottom: '10px',\n        }}\n        variant=\"h3\"\n      >\n        Contacts\n      </Typography>\n      <TextField\n        sx={{ width: '50ch' }}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => changeFilter(event.target.value)}\n        id=\"filled-basic\"\n        label=\"Find contacts by name\"\n        variant=\"filled\"\n        required\n      />\n    </Box>\n  );\n};\n","import { Grid, List, Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { useFilter } from 'hooks/filterHook';\nimport { useGetContactsQuery } from 'Redux/contactsSlice';\nimport { useMemo } from 'react';\nimport style from './ContactList.module.css';\nimport { Filter } from '../Filter/Filter';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark' ? '#1A2027' : 'rgba(0, 0, 0, 0.06)',\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  minWidth: 400,\n  color: theme.palette.text.primary,\n}));\n\nexport const ContactsList = () => {\n  const { filter } = useFilter();\n  const { data: contacts } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      ) ?? []\n    );\n  }, [filter, contacts]);\n\n  return (\n    <Box\n      className={style.Boxes}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      textAlign=\"center\"\n      sx={{ flexGrow: 1 }}\n    >\n      <Filter />\n      <StyledPaper\n        sx={{\n          my: 1,\n          mx: 'auto',\n          p: 2,\n        }}\n      >\n        <Grid item xs={12} md={6}>\n          <List>\n            {filteredContacts &&\n              filteredContacts.map(({ name, number, id }) => (\n                <ContactItem key={id} name={name} number={number} id={id} />\n              ))}\n          </List>\n        </Grid>\n      </StyledPaper>\n    </Box>\n  );\n};\n","import { Box } from '@mui/material';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\n// import { Filter } from '../components/Filter/index';\nimport { ContactsList } from '../components/ContactList/ContactList';\n\nconst ContactsView = () => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      paddingBottom=\"250px\"\n      backgroundSize=\"cover\"\n      backgroundPosition=\"center\"\n      backgroundRepeat=\"no-repeat\"\n    >\n      <ContactForm />\n      <ContactsList />\n    </Box>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useGetContactsQuery","data","_useAddContactMutatio","useAddContactMutation","addContact","onChangeInput","event","_event$target","target","value","reset","currentTarget","_jsxs","Box","className","style","textAlign","children","_jsx","Typography","fontSize","fontWeight","lineHeight","marginBottom","variant","component","display","justifyContent","flexDirection","sx","m","autoComplete","onSubmit","contact","preventDefault","some","item","alert","concat","TextField","width","type","onChange","id","label","required","Button","disabled","ContactItem","_ref","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","isLoading","ListItem","ListItemText","primary","IconButton","onClick","edge","DeleteIcon","useFilter","dispatch","useDispatch","filter","useSelector","onFilterChange","changeFilter","filterAction","Filter","_useFilter","alignItems","StyledPaper","styled","Paper","theme","_objectSpread","backgroundColor","palette","mode","typography","body2","padding","spacing","minWidth","color","text","ContactsList","filteredContacts","useMemo","_contacts$filter","toLocaleLowerCase","includes","flexGrow","my","mx","p","Grid","xs","md","List","map","_ref2","paddingBottom","backgroundSize","backgroundPosition","backgroundRepeat"],"sourceRoot":""}